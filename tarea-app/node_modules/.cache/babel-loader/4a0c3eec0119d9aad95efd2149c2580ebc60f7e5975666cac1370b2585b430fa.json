{"ast":null,"code":"var _jsxFileName = \"D:\\\\html\\\\tarea-app\\\\src\\\\components\\\\TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  // Estado para almacenar las tareas\n  const [tasks, setTasks] = useState([]);\n  const [isAscendingOrder, setIsAscendingOrder] = useState(true);\n\n  // Función para actualizar la lista de tareas\n  const updateTaskList = () => {\n    // Renderiza las tareas utilizando el estado \"tasks\"\n    return tasks.map((task, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task\",\n        draggable: \"true\",\n        \"data-index\": index,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"task-text\",\n          children: task\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-button\",\n          onClick: () => handleDeleteTask(index),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  // Función para manejar el evento de clic en el botón de eliminar tarea\n  const handleDeleteTask = index => {\n    const confirmed = window.confirm('¿Quieres borrar esta tarea?');\n    if (confirmed) {\n      const updatedTasks = [...tasks];\n      updatedTasks.splice(index, 1);\n      setTasks(updatedTasks); // Actualiza el estado con las tareas actualizadas\n    }\n  };\n\n  // Función para manejar el evento de ordenar tareas\n  const handleSortTasks = () => {\n    let sortedTasks;\n    if (isAscendingOrder) {\n      sortedTasks = [...tasks].sort();\n    } else {\n      sortedTasks = [...tasks].sort().reverse();\n    }\n    setTasks(sortedTasks); // Actualiza el estado con las tareas ordenadas\n    setIsAscendingOrder(!isAscendingOrder); // Cambia el orden ascendente/descendente\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"caja\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lista de Tareas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"taskInput\",\n        placeholder: \"Nueva tarea\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"addTaskButton\",\n        onClick: handleAddTask,\n        children: \"Agregar tarea\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonimagen\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"sortButton\",\n          onClick: handleSortTasks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-list\",\n        children: updateTaskList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"REH/6RWdFGaayH92G3i+yWwNc+g=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","isAscendingOrder","setIsAscendingOrder","updateTaskList","map","task","index","className","draggable","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","handleDeleteTask","confirmed","window","confirm","updatedTasks","splice","handleSortTasks","sortedTasks","sort","reverse","type","id","placeholder","handleAddTask","_c","$RefreshReg$"],"sources":["D:/html/tarea-app/src/components/TaskList.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst TaskList = () => {\r\n  // Estado para almacenar las tareas\r\n  const [tasks, setTasks] = useState([]);\r\n  const [isAscendingOrder, setIsAscendingOrder] = useState(true);\r\n\r\n  // Función para actualizar la lista de tareas\r\n  const updateTaskList = () => {\r\n    // Renderiza las tareas utilizando el estado \"tasks\"\r\n    return tasks.map((task, index) => {\r\n      return (\r\n        <div key={index} className=\"task\" draggable=\"true\" data-index={index}>\r\n          <span className=\"task-text\">{task}</span>\r\n          <button className=\"delete-button\" onClick={() => handleDeleteTask(index)}>X</button>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  // Función para manejar el evento de clic en el botón de eliminar tarea\r\n  const handleDeleteTask = (index) => {\r\n    const confirmed = window.confirm('¿Quieres borrar esta tarea?');\r\n    if (confirmed) {\r\n      const updatedTasks = [...tasks];\r\n      updatedTasks.splice(index, 1);\r\n      setTasks(updatedTasks); // Actualiza el estado con las tareas actualizadas\r\n    }\r\n  };\r\n\r\n  // Función para manejar el evento de ordenar tareas\r\n  const handleSortTasks = () => {\r\n    let sortedTasks;\r\n    if (isAscendingOrder) {\r\n      sortedTasks = [...tasks].sort();\r\n    } else {\r\n      sortedTasks = [...tasks].sort().reverse();\r\n    }\r\n    setTasks(sortedTasks); // Actualiza el estado con las tareas ordenadas\r\n    setIsAscendingOrder(!isAscendingOrder); // Cambia el orden ascendente/descendente\r\n  };\r\n\r\n  return (\r\n    <div className=\"caja\">\r\n      <h1>Lista de Tareas</h1>\r\n      <div>\r\n        <input type=\"text\" id=\"taskInput\" placeholder=\"Nueva tarea\" />\r\n        <button id=\"addTaskButton\" onClick={handleAddTask}>Agregar tarea</button>\r\n        <div className=\"buttonimagen\">\r\n          <button id=\"sortButton\" onClick={handleSortTasks}>\r\n            {/* Agrega aquí la imagen */}\r\n          </button>\r\n        </div>\r\n        <div className=\"task-list\">\r\n          {updateTaskList()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}