{"ast":null,"code":"var _jsxFileName = \"D:\\\\html\\\\tarea-app\\\\src\\\\components\\\\TaskList.js\",\n  _s = $RefreshSig$();\nimport '../styles/App.css';\nimport '../styles/Task.css';\nimport React, { useState } from 'react';\nimport Task from './Task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [isAscendingOrder, setIsAscendingOrder] = useState(true);\n  const handleAddTask = newTask => {\n    setTasks([...tasks, newTask]);\n  };\n  const handleSortTasks = () => {\n    if (isAscendingOrder) {\n      tasks.sort();\n    } else {\n      tasks.sort().reverse();\n    }\n    setTasks([...tasks]);\n    setIsAscendingOrder(!isAscendingOrder);\n  };\n  const handleDeleteTask = index => {\n    const confirmed = window.confirm('¿Quieres borrar esta tarea?');\n    if (confirmed) {\n      const updatedTasks = [...tasks];\n      updatedTasks.splice(index, 1);\n      setTasks(updatedTasks);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"caja\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lista de Tareas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Task, {\n        onAddTask: handleAddTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"sortButton\",\n        onClick: handleSortTasks,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/images/A_Z.png\",\n          alt: \"Ordenar ascendente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"taskList\",\n        children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"task-text\",\n            children: task\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-button\",\n            onClick: () => handleDeleteTask(index),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"REH/6RWdFGaayH92G3i+yWwNc+g=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","Task","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","isAscendingOrder","setIsAscendingOrder","handleAddTask","newTask","handleSortTasks","sort","reverse","handleDeleteTask","index","confirmed","window","confirm","updatedTasks","splice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onAddTask","id","onClick","src","alt","map","task","_c","$RefreshReg$"],"sources":["D:/html/tarea-app/src/components/TaskList.js"],"sourcesContent":["\r\nimport '../styles/App.css';\r\nimport '../styles/Task.css';\r\n\r\nimport React, { useState } from 'react';\r\nimport Task from './Task';\r\n\r\nconst TaskList = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [isAscendingOrder, setIsAscendingOrder] = useState(true);\r\n\r\n  const handleAddTask = (newTask) => {\r\n    setTasks([...tasks, newTask]);\r\n  };\r\n\r\n  const handleSortTasks = () => {\r\n    if (isAscendingOrder) {\r\n      tasks.sort();\r\n    } else {\r\n      tasks.sort().reverse();\r\n    }\r\n    setTasks([...tasks]);\r\n    setIsAscendingOrder(!isAscendingOrder);\r\n  };\r\n\r\n  const handleDeleteTask = (index) => {\r\n    const confirmed = window.confirm('¿Quieres borrar esta tarea?');\r\n    if (confirmed) {\r\n      const updatedTasks = [...tasks];\r\n      updatedTasks.splice(index, 1);\r\n      setTasks(updatedTasks);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"caja\">\r\n      <h1>Lista de Tareas</h1>\r\n      <div>\r\n        <Task onAddTask={handleAddTask} />\r\n        <button id=\"sortButton\" onClick={handleSortTasks}>\r\n          <img  src=\"/images/A_Z.png\" alt=\"Ordenar ascendente\" />\r\n        </button>\r\n        <div id=\"taskList\">\r\n          {tasks.map((task, index) => (\r\n            <div key={index} className=\"task\">\r\n              <span className=\"task-text\">{task}</span>\r\n              <button className=\"delete-button\" onClick={() => handleDeleteTask(index)}>\r\n                X\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}